#include "stdafx.h"
#include "Map.h"
#include "EnemyManager.h"
#include "Player.h"
#include "UI.h"

Map::Map()
{
}


Map::~Map()
{
}
HRESULT Map::init()
{
	setTile();

	return S_OK;
}
void Map::release()
{

}
void Map::update()
{




	/*
	아이템 생성 방법

	tagItemInfo item;
	//이미지
	item.bigImg = IMAGEMANAGER->findImage(); // 큰 이미지(인벤토리에서 보여줄 이미지)
	item.smallImg = IMAGEMANAGER->findImage(); //작은 이미지(맵 위에서 보여줄 이미지)
	//능력치
	item.itemstat.hp = 0;
	item.itemstat.str = 1;
	item.itemstat.dex = 0;
	item.itemstat.vit = 0;
	item.itemstat.inl = 0;
	item.itemstat.lck = 0;
	item.itemstat.def = 0;
	item.itemstat.fir = 0;
	item.itemstat.ice = 0;
	item.itemstat.lgt = 0;
	item.itemstat.psn = 0;
	item.itemstat.mel = 0;
	item.itemstat.rng = 0;
	item.itemstat.crit = 0;
	item.itemstat.aspd = 0;
	item.itemstat.spd = 0;
	item.itemstate = ITEMSTATE_ONMAP;
	//아이템 좌표
	item.point = ;
	//아이템 rect
	item.rc = ;
	//만든 아이템 정보 map에 넘겨주기!
	_ui->addItemOnMap(item);
	*/
	
}
void Map::render()
{

}

//그릴 때	x좌표에 (WINSIZEX/2 - camera.x) 만큼
//			y좌표에 (WINSIZEY/2 - camera.y) 만큼 더해주기!!!!
void Map::render(POINT camera)
{
	draw(camera);
}
void Map::draw(POINT camera)
{
	IMAGEMANAGER->render("bg", getMemDC(), WINSIZEX / 2 - camera.x, WINSIZEY / 2 - camera.y);
}
void Map::setTile()
{
	
	/* 	0 : MAPTILE_NULL
		1 : MAPTILE_WALL,
		2 : MAPTILE_WALL2,
		3 : MAPTILE_LADDER,
		4 : MAPTILE_GROUND_CAN_GO_DOWN_1,
		5 : MAPTILE_GROUND_CAN_GO_DOWN_2
	*/

	//맵 구성
	int temp[40][58] = {
		{ 1,1,1,1,1,   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,    1,1,1,1,1 },



		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,0,0,0,0, 0,0,1,1,1, 1,1,0,0,0, 1,1,1,1,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,1,1,1, 0,0,0,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,0,1,1,0, 0,0,1,1,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,1,1,1, 1,0,0,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 0,0,1,1,0, 0,0,0,1,0, 1,0,0,0,0, 0,0,1,0,1, 0,0,0,0,0, 0,0,0,1,0, 0,0,0,1,1, 0,0,0,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 0,0,1,1,1, 1,0,0,0,0, 1,0,0,0,0, 0,0,1,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,1,1, 0,0,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 0,0,0,0,1, 1,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 1,0,0,0,0, 0,0,1,0,1, 1,0,0,0,0, 0,0,1,    1,1,1,1,1 },

		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },

		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },

		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },

		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },

		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,    1,1,1,1,1 },




		{ 1,1,1,1,1,   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,    1,1,1,1,1 },
		{ 1,1,1,1,1,   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,    1,1,1,1,1 }
	};

	for (int i = 0; i < 40; i++)
	{
		for (int j = 0; j < 58; j++)
		{
			_mapInfo[i][j].rc = RectMake(_mapInfo[i][j].point.x, _mapInfo[i][j].point.y, TILESIZE, TILESIZE);
		}
	}


	for (int i = 0; i < 40; i++)
	{
		for (int j = 0; j < 58; j++)
		{
			_mapInfo[i][j].type = temp[i][j];
			_mapInfo[i][j].point = PointMake(i*TILESIZE, j*TILESIZE);
			_mapInfo[i][j].rc = RectMake(_mapInfo[i][j].point.x, _mapInfo[i][j].point.y, TILESIZE, TILESIZE);
		}
	}

}